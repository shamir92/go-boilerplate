// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	context "context"
	compiled "simple-invitation/protocol/grpc/presenters/compiled"

	mock "github.com/stretchr/testify/mock"
)

// IMemberController is an autogenerated mock type for the IMemberController type
type IMemberController struct {
	mock.Mock
}

// FetchAll provides a mock function with given fields: _a0, _a1
func (_m *IMemberController) FetchAll(_a0 context.Context, _a1 *compiled.MemberRequest) (*compiled.MemberResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *compiled.MemberResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *compiled.MemberRequest) (*compiled.MemberResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *compiled.MemberRequest) *compiled.MemberResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*compiled.MemberResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *compiled.MemberRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIMemberController creates a new instance of IMemberController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIMemberController(t interface {
	mock.TestingT
	Cleanup(func())
}) *IMemberController {
	mock := &IMemberController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
